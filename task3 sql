-- ==============================
-- Task 3: Writing Basic SELECT Queries
-- ==============================

-- 1. Create Customers Table
CREATE TABLE Customers (
    id INT PRIMARY KEY,
    name VARCHAR(50),
    age INT,
    city VARCHAR(50)
);

-- 2. Create Orders Table
CREATE TABLE Orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    amount DECIMAL(10,2),
    order_date DATE,
    FOREIGN KEY (customer_id) REFERENCES Customers(id)
);

-- 3. Insert Data into Customers
INSERT INTO Customers (id, name, age, city) VALUES
(1, 'Alice', 25, 'Delhi'),
(2, 'Bob', 30, 'Mumbai'),
(3, 'Charlie', 22, 'Bangalore'),
(4, 'David', 35, 'Hyderabad');

-- 4. Insert Data into Orders
INSERT INTO Orders (order_id, customer_id, amount, order_date) VALUES
(101, 1, 500.00, '2025-09-01'),
(102, 2, 1500.50, '2025-09-05'),
(103, 1, 300.00, '2025-09-10'),
(104, 3, 700.75, '2025-09-15');

-- ==============================
-- Queries
-- ==============================

-- Select all columns
SELECT * FROM Customers;

-- Select specific columns
SELECT name, city FROM Customers;

-- Filter rows with WHERE
SELECT * FROM Customers WHERE age > 25;

-- Use AND, OR
SELECT * FROM Customers WHERE age > 20 AND city = 'Delhi';
SELECT * FROM Customers WHERE city = 'Mumbai' OR city = 'Hyderabad';

-- Pattern matching with LIKE
SELECT * FROM Customers WHERE name LIKE 'A%';  

-- Range filter with BETWEEN
SELECT * FROM Orders WHERE amount BETWEEN 300 AND 1000;

-- Sorting with ORDER BY
SELECT * FROM Orders ORDER BY amount DESC;

-- Limit output rows
SELECT * FROM Customers LIMIT 2;

-- Using = vs IN
SELECT * FROM Customers WHERE city = 'Delhi';
SELECT * FROM Customers WHERE city IN ('Delhi', 'Mumbai');

-- Aliasing
SELECT name AS CustomerName, city AS Location FROM Customers;

-- DISTINCT
SELECT DISTINCT city FROM Customers;
